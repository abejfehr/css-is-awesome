{"version":3,"sources":["components/Box/index.js","components/Puzzle/index.js","components/Sidebar/index.js","data/index.js","data/direction/level-1.js","data/direction/level-2.js","data/direction/level-3.js","data/alignment/level-1.js","data/alignment/level-2.js","data/alignment/level-3.js","hooks/useSceneManager.js","App.js","index.js"],"names":["Box","width","_width","height","_height","x","_x","y","_y","label","resizable","passedClassName","onInput","useState","setX","setY","setWidth","setHeight","boxEl","useRef","putOnTop","current","document","querySelectorAll","forEach","el","style","zIndex","handleDrag","useCallback","event","data","deltaX","deltaY","target","classList","contains","handleResize","_","dir","ref","offsetWidth","offsetHeight","handleDragStop","handleResizeStop","resizeProps","includes","enableResizing","className","default","resizeGrid","dragGrid","onDrag","onDragStart","onDragStop","onResize","onResizeStart","onResizeStop","bounds","Puzzle","rng","level","sceneIndex","onReset","canvasWidth","canvasHeight","boxes","map","box","index","key","onClick","Sidebar","onSubmit","submitText","children","SidebarContents","css","trim","html","SidebarIntroduction","SidebarComplete","levels","goal","KEYS_TO_KEEP","transformScene","scene","JSON","parse","stringify","pick","App","introduction","setIntroduction","complete","setComplete","INITIAL_LEVEL","setSceneIndex","_scene","_goal","isMatch","setMatch","initialScene","referenceScene","boxToUpdate","find","differenceWith","isEqual","length","newScene","newGoalScene","useSceneManager","updateScene","setScene","Math","random","toString","substring","setRng","handleLevelSubmit","goTo","ReactDOM","render","getElementById"],"mappings":"6NAIaA,G,MAAM,SAAC,GASb,IAAD,IARJC,MAAOC,OAQH,MARY,IAQZ,MAPJC,OAAQC,OAOJ,MAPc,IAOd,MANJC,EAAGC,OAMC,MANI,EAMJ,MALJC,EAAGC,OAKC,MALI,EAKJ,EAJJC,EAII,EAJJA,MAII,IAHJC,iBAGI,MAHQ,CAAC,IAAK,KAGd,EAFJC,EAEI,EAFJA,gBAEI,IADJC,eACI,MADM,aACN,IACcC,mBAASP,GADvB,mBACGD,EADH,KACMS,EADN,OAEcD,mBAASL,GAFvB,mBAEGD,EAFH,KAEMQ,EAFN,OAGsBF,mBAASX,GAH/B,mBAGGD,EAHH,KAGUe,EAHV,OAIwBH,mBAAST,GAJjC,mBAIGD,EAJH,KAIWc,EAJX,KAMEC,EAAQC,mBAERC,EAAW,WAEXF,EAAMG,UACRC,SAASC,iBAAiB,QAAQC,SAAQ,SAACC,GACrCP,EAAMG,UAAYI,IACpBA,EAAGC,MAAMC,OAAS,MAKtBT,EAAMG,QAAQK,MAAMC,OAAS,KAI3BC,EAAaC,uBACjB,SAACC,EAAOC,GACNjB,KAAQT,EAAI0B,EAAKC,SACjBjB,KAAQR,EAAIwB,EAAKE,UAEZf,EAAMG,SAAWS,EAAMI,OAAOC,UAAUC,SAAS,SACpDlB,EAAMG,QAAUS,EAAMI,QAGxBtB,EAAQD,IAAmBN,IAAKE,IAAKN,IAASE,KAEhD,CAACE,EAAGE,EAAGN,EAAOE,IAGVkC,EAAeR,uBACnB,SAACS,EAAGC,EAAKC,GACPxB,IAAWwB,EAAIC,aACfxB,IAAYuB,EAAIE,eAEXxB,EAAMG,SAAWmB,EAAIL,UAAUC,SAAS,SAC3ClB,EAAMG,QAAUmB,GAGlB5B,EAAQD,IAAmBN,IAAKE,IAAKN,IAASE,KAEhD,CAACE,EAAGE,EAAGN,EAAOE,IAGVwC,EAAiBd,uBAAY,WAEjCjB,EAAQD,IAAmBN,IAAKE,IAAKN,IAASE,KAC7C,CAACE,EAAGE,EAAGN,EAAOE,IAEXyC,EAAmBf,uBAAY,WACnCjB,EAAQD,IAAmBN,IAAKE,IAAKN,IAASE,KAC7C,CAACE,EAAGE,EAAGN,EAAOE,IAEb0C,EAAc,GAelB,OAbInC,GACEA,EAAUoC,SAAS,OACrBD,EAAW,UAAgB1C,GAEzBO,EAAUoC,SAAS,OACrBD,EAAW,SAAe5C,IAG5B4C,EAAc,CACZE,gBAAgB,GAKlB,kBAAC,IAAD,eACEC,UAAU,MACVC,QAAS,CACP5C,IACAE,IACAN,QACAE,UAEF+C,WAAY,CAAC,GAAI,IACjBC,SAAU,CAAC,GAAI,IACfC,OAAQxB,EACRyB,YAAajC,EACbkC,WAAYX,EACZY,SAAUlB,EACVmB,cAAepC,EACfqC,aAAcb,EACdc,OAAO,UACHb,GAGJ,yBAAKG,UAAU,qBACf,yBAAKA,UAAU,qBAEf,yBAAKA,UAAU,oBACb,6BAAMvC,GACN,qCACQJ,EADR,KACaE,GAEb,sCACSN,EADT,KACkBE,OCjHbwD,G,MAAS,SAAC,GAAkD,IAAD,EAA/CC,EAA+C,EAA/CA,IAAKC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,WAAYlD,EAAuB,EAAvBA,QAASmD,EAAc,EAAdA,QACxD,OACE,6BAASf,UAAU,gBAAnB,SACSc,EAAa,EACpB,yBACEd,UAAU,qBACVtB,MAAO,CACLzB,MAAO4D,EAAMG,YACb7D,OAAQ0D,EAAMI,eAGhB,yBAAKjB,UAAU,2BACf,yBAAKA,UAAU,2BARjB,UASGa,EAAMK,aATT,aASG,EAAaC,KAAI,SAACC,EAAKC,GAAN,OAChB,kBAAC,EAAD,CACEC,IAAG,UAAKR,EAAL,YAAmBO,EAAnB,YAA4BT,GAC/BjD,gBAAiByD,EAAIpB,UACrBvC,MAAK,WAAM2D,EAAIpB,WACf3C,EAAG+D,EAAI/D,EACPE,EAAG6D,EAAI7D,EACPN,MAAOmE,EAAInE,MACXE,OAAQiE,EAAIjE,OACZO,UAAW0D,EAAI1D,UACfE,QAASA,QAIf,4BAAQ2D,QAASR,GAAjB,Y,iBC3BOS,G,OAAU,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SAC9C,OACE,6BAAS3B,UAAU,WACjB,6BACE,gCACE,wBAAIA,UAAU,mBAAd,qBACA,uBAAGA,UAAU,oBAAb,4DAID2B,GAEFD,GAAc,4BAAQH,QAASE,GAAWC,MAKpCE,EAAkB,SAAC,GAAD,IAAGf,EAAH,EAAGA,MAAH,OAC7B,oCACE,0BAAMb,UAAU,SAAhB,OACA,kBAAC,IAAD,CAAWA,UAAU,OAAOa,EAAMgB,IAAIC,QACtC,0BAAM9B,UAAU,SAAhB,QACA,kBAAC,IAAD,CAAWA,UAAU,QAAQa,EAAMkB,KAAKD,UAI/BE,EAAsB,kBACjC,oCACE,qEACA,kKAOSC,EAAkB,kBAC7B,oCACE,gDACA,sFACA,2ECrCSC,EAAS,CCPI,CACxBL,IAAI,sCAIJE,KAAK,8FAKLf,YAAa,IACbC,aAAc,IACdC,MAAO,CACL,CACElB,UAAW,QACX3C,EAAG,EACHE,EAAG,EACHN,MAAO,IACPE,OAAQ,IACRO,WAAW,GAEb,CACEsC,UAAW,QACX3C,EAAG,IACHE,EAAG,IACHN,MAAO,IACPE,OAAQ,IACRO,WAAW,IAGfyE,KAAM,CACJ,CACEnC,UAAW,QACX3C,EAAG,EACHE,EAAG,EACHN,MAAO,IACPE,OAAQ,KAEV,CACE6C,UAAW,QACX3C,EAAG,IACHE,EAAG,EACHN,MAAO,IACPE,OAAQ,OC3CY,CACxB0E,IAAI,iEAKJE,KAAK,8FAKLf,YAAa,IACbC,aAAc,IACdC,MAAO,CACL,CACElB,UAAW,QACX3C,EAAG,EACHE,EAAG,EACHN,MAAO,IACPE,OAAQ,IACRO,WAAW,GAEb,CACEsC,UAAW,QACX3C,EAAG,IACHE,EAAG,IACHN,MAAO,IACPE,OAAQ,IACRO,WAAW,IAGfyE,KAAM,CACJ,CACEnC,UAAW,QACX3C,EAAG,EACHE,EAAG,EACHN,MAAO,IACPE,OAAQ,KAEV,CACE6C,UAAW,QACX3C,EAAG,EACHE,EAAG,IACHN,MAAO,IACPE,OAAQ,OC5CY,CACxB0E,IAAI,sEAKJE,KAAK,8FAKLf,YAAa,IACbC,aAAc,IACdC,MAAO,CACL,CACElB,UAAW,QACX3C,EAAG,EACHE,EAAG,EACHN,MAAO,IACPE,OAAQ,IACRO,WAAW,GAEb,CACEsC,UAAW,QACX3C,EAAG,IACHE,EAAG,IACHN,MAAO,IACPE,OAAQ,IACRO,WAAW,IAGfyE,KAAM,CACJ,CACEnC,UAAW,QACX3C,EAAG,EACHE,EAAG,EACHN,MAAO,IACPE,OAAQ,KAEV,CACE6C,UAAW,QACX3C,EAAG,IACHE,EAAG,EACHN,MAAO,IACPE,OAAQ,OC5CY,CACxB0E,IAAI,8DAKJE,KAAK,8FAKLf,YAAa,IACbC,aAAc,IACdC,MAAO,CACL,CACElB,UAAW,QACX3C,EAAG,EACHE,EAAG,EACHN,MAAO,IACPE,OAAQ,IACRO,WAAW,GAEb,CACEsC,UAAW,QACX3C,EAAG,IACHE,EAAG,IACHN,MAAO,IACPE,OAAQ,IACRO,WAAW,IAGfyE,KAAM,CACJ,CACEnC,UAAW,QACX3C,EAAG,EACHE,EAAG,IACHN,MAAO,IACPE,OAAQ,KAEV,CACE6C,UAAW,QACX3C,EAAG,IACHE,EAAG,GACHN,MAAO,IACPE,OAAQ,OC5CY,CACxB0E,IAAI,0FAMJE,KAAK,iEAILf,YAAa,IACbC,aAAc,IACdC,MAAO,CACL,CACElB,UAAW,QACX3C,EAAG,EACHE,EAAG,EACHN,MAAO,IACPE,OAAQ,IACRO,WAAW,IAGfyE,KAAM,CACJ,CACEnC,UAAW,QACX3C,EAAG,IACHE,EAAG,IACHN,MAAO,IACPE,OAAQ,IACRO,WAAW,KC9BS,CACxBmE,IAAI,+DAKJE,KAAK,iEAILf,YAAa,IACbC,aAAc,IACdC,MAAO,CACL,CACElB,UAAW,QACX3C,EAAG,EACHE,EAAG,EACHN,MAAO,IACPE,OAAQ,IACRO,UAAW,CAAC,MAEd,CACEsC,UAAW,QACX3C,EAAG,IACHE,EAAG,IACHN,MAAO,IACPE,OAAQ,IACRO,UAAW,CAAC,OAGhByE,KAAM,CACJ,CACEnC,UAAW,QACX3C,EAAG,EACHE,EAAG,EACHN,MAAO,IACPE,OAAQ,KAEV,CACE6C,UAAW,QACX3C,EAAG,IACHE,EAAG,EACHN,MAAO,IACPE,OAAQ,Q,mDCtCRiF,EAAe,CAAC,YAAa,IAAK,IAAK,QAAS,UAEhDC,EAAiB,SAACC,GAAD,OACrBC,KAAKC,MAAMD,KAAKE,UAAUH,EAAMnB,KAAI,SAACC,GAAD,OAASsB,IAAKtB,EAAKgB,SC6E1CO,EAtEH,WAAM,MAEwB9E,oBAAS,GAFjC,mBAET+E,EAFS,KAEKC,EAFL,OAKgBhF,oBAAS,GALzB,mBAKTiF,EALS,KAKCC,EALD,OAOoBlF,mBAASmF,GAP7B,mBAOTlC,EAPS,KAOGmC,EAPH,ODLa,SAACC,EAAQC,GAAW,IAAD,EACpBtF,oBAAS,GADW,mBACzCuF,EADyC,KAChCC,EADgC,KAE1Cf,EAAQnE,iBAAOkE,EAAea,IAC9BI,EAAenF,iBAAOkE,EAAea,IACrCK,EAAiBpF,iBAAOkE,EAAec,IAgC7C,MAAO,CAACC,EA9BYvE,uBAClB,SAACmB,EAAW3C,EAAGE,EAAGN,EAAOE,GAEvB,IAAMqG,EAAclB,EAAMjE,QAAQoF,MAChC,SAACrC,GAAD,OAASA,EAAIpB,YAAcA,KAE7BwD,EAAYnG,EAAIA,EAChBmG,EAAYjG,EAAIA,EAChBiG,EAAYvG,MAAQA,EACpBuG,EAAYrG,OAASA,EAGrBkG,EAEgB,IADdK,IAAepB,EAAMjE,QAASkF,EAAelF,QAASsF,KACnDC,UAGP,CAACtB,EAAOgB,IAGOzE,uBACf,SAACgF,EAAUC,GACTxB,EAAMjE,QAAUgE,EAAewB,GAC/BP,EAAajF,QAAUgE,EAAewB,GACtCN,EAAelF,QAAUgE,EAAeyB,GACxCT,GAAS,KAEX,CAACf,EAAOgB,KCpB+BS,CACvC7B,EAAOpB,GAAYI,MACnBgB,EAAOpB,GAAYqB,MAVL,mBAQTiB,EARS,KAQAY,EARA,KAQaC,EARb,OAYMpG,mBAASqG,KAAKC,SAASC,SAAS,IAAIC,UAAU,IAZpD,mBAYTzD,EAZS,KAYJ0D,EAZI,KAcVC,EAAoB1F,uBAAY,WACpC,GAAI+D,EACFC,GAAgB,QAKlB,GAAIO,EAAS,CACX,GAAItC,EAAa,IAAMoB,EAAO0B,OAE5B,YADAb,GAAY,GAGdyB,GAAM1D,EAAa,GAAKoB,EAAO0B,WAEhC,CAAC9C,EAAYsC,IAEVoB,EAAO,SAAC1D,GACZmC,EAAcnC,GACdmD,EAAS/B,EAAOpB,GAAYI,MAAOgB,EAAOpB,GAAYqB,OAkBxD,OACE,8BACE,kBAAC,EAAD,CAASV,SAAU8C,EAAmB7C,WAXpCkB,EACK,QAELE,EACK,KAEF,UAMFF,GAAgB,kBAAC,EAAD,OACfA,IAAiBE,GACjB,kBAAC,EAAD,CAAiBjC,MAAOqB,EAAOpB,KAEhCgC,GAAY,kBAAC,EAAD,OAEf,kBAAC,EAAD,CACElC,IAAKA,EACLC,MAAOqB,EAAOpB,GACdA,WAAYA,EACZlD,QAASoG,EACTjD,QA7Bc,WAClBkD,EAAS/B,EAAOpB,GAAYI,MAAOgB,EAAOpB,GAAYqB,MACtDmC,EAAOJ,KAAKC,SAASC,SAAS,IAAIC,UAAU,SC/ChDI,IAASC,OACP,kBAAC,EAAD,MACApG,SAASqG,eAAe,U","file":"static/js/main.fcad36b9.chunk.js","sourcesContent":["import React, { useCallback, useRef, useState } from \"react\";\nimport { Rnd } from \"react-rnd\";\nimport \"./index.css\";\n\nexport const Box = ({\n  width: _width = 100,\n  height: _height = 100,\n  x: _x = 0,\n  y: _y = 0,\n  label,\n  resizable = [\"x\", \"y\"],\n  passedClassName,\n  onInput = () => {},\n}) => {\n  const [x, setX] = useState(_x);\n  const [y, setY] = useState(_y);\n  const [width, setWidth] = useState(_width);\n  const [height, setHeight] = useState(_height);\n\n  const boxEl = useRef();\n\n  const putOnTop = () => {\n    // Remove elevated z-index from other boxes\n    if (boxEl.current) {\n      document.querySelectorAll(\".Box\").forEach((el) => {\n        if (boxEl.current !== el) {\n          el.style.zIndex = 1;\n        }\n      });\n\n      // Increase this element's z-index\n      boxEl.current.style.zIndex = 10;\n    }\n  };\n\n  const handleDrag = useCallback(\n    (event, data) => {\n      setX(~~(x + data.deltaX));\n      setY(~~(y + data.deltaY));\n\n      if (!boxEl.current && event.target.classList.contains(\"Box\")) {\n        boxEl.current = event.target;\n      }\n\n      onInput(passedClassName, ~~x, ~~y, ~~width, ~~height);\n    },\n    [x, y, width, height]\n  );\n\n  const handleResize = useCallback(\n    (_, dir, ref) => {\n      setWidth(~~ref.offsetWidth);\n      setHeight(~~ref.offsetHeight);\n\n      if (!boxEl.current && ref.classList.contains(\"Box\")) {\n        boxEl.current = ref;\n      }\n\n      onInput(passedClassName, ~~x, ~~y, ~~width, ~~height);\n    },\n    [x, y, width, height]\n  );\n\n  const handleDragStop = useCallback(() => {\n    // Don't use this, it somehow breaks things\n    onInput(passedClassName, ~~x, ~~y, ~~width, ~~height);\n  }, [x, y, width, height]);\n\n  const handleResizeStop = useCallback(() => {\n    onInput(passedClassName, ~~x, ~~y, ~~width, ~~height);\n  }, [x, y, width, height]);\n\n  let resizeProps = {};\n\n  if (resizable) {\n    if (resizable.includes(\"x\")) {\n      resizeProps[\"maxHeight\"] = height;\n    }\n    if (resizable.includes(\"y\")) {\n      resizeProps[\"maxWidth\"] = width;\n    }\n  } else {\n    resizeProps = {\n      enableResizing: false,\n    };\n  }\n\n  return (\n    <Rnd\n      className=\"Box\"\n      default={{\n        x,\n        y,\n        width,\n        height,\n      }}\n      resizeGrid={[10, 10]}\n      dragGrid={[10, 10]}\n      onDrag={handleDrag}\n      onDragStart={putOnTop}\n      onDragStop={handleDragStop}\n      onResize={handleResize}\n      onResizeStart={putOnTop}\n      onResizeStop={handleResizeStop}\n      bounds=\"parent\"\n      {...resizeProps}\n    >\n      {/* <div className=\"Box__container\"> */}\n      <div className=\"Box__crosshair-x\"></div>\n      <div className=\"Box__crosshair-y\"></div>\n      {/* </div> */}\n      <div className=\"Box__coordinates\">\n        <pre>{label}</pre>\n        <pre>\n          Pos: {x}, {y}\n        </pre>\n        <pre>\n          Size: {width}, {height}\n        </pre>\n      </div>\n    </Rnd>\n  );\n};\n","import React from \"react\";\nimport { Box } from \"../Box/\";\nimport \"./index.css\";\n\nexport const Puzzle = ({ rng, level, sceneIndex, onInput, onReset }) => {\n  return (\n    <section className=\"SolutionArea\">\n      Level {sceneIndex + 1}\n      <div\n        className=\"SolutionArea__goal\"\n        style={{\n          width: level.canvasWidth,\n          height: level.canvasHeight,\n        }}\n      >\n        <div className=\"SolutionArea__v-center\"></div>\n        <div className=\"SolutionArea__h-center\"></div>\n        {level.boxes?.map((box, index) => (\n          <Box\n            key={`${sceneIndex}-${index}-${rng}`}\n            passedClassName={box.className}\n            label={`.${box.className}`}\n            x={box.x}\n            y={box.y}\n            width={box.width}\n            height={box.height}\n            resizable={box.resizable}\n            onInput={onInput}\n          />\n        ))}\n      </div>\n      <button onClick={onReset}>reset</button>\n    </section>\n  );\n};\n","import React from \"react\";\nimport Highlight from \"react-highlight\";\nimport \"./index.css\";\n\nexport const Sidebar = ({ onSubmit, submitText, children }) => {\n  return (\n    <section className=\"Sidebar\">\n      <div>\n        <header>\n          <h1 className=\"Sidebar__header\">Weird flex but OK</h1>\n          <p className=\"Sidebar__subtext\">\n            Put your CSS skills to the test in this CSS puzzle game\n          </p>\n        </header>\n        {children}\n      </div>\n      {submitText && <button onClick={onSubmit}>{submitText}</button>}\n    </section>\n  );\n};\n\nexport const SidebarContents = ({ level }) => (\n  <>\n    <span className=\"label\">CSS</span>\n    <Highlight className=\"css\">{level.css.trim()}</Highlight>\n    <span className=\"label\">HTML</span>\n    <Highlight className=\"html\">{level.html.trim()}</Highlight>\n  </>\n);\n\nexport const SidebarIntroduction = () => (\n  <>\n    <p>Welcome to this ridiculous CSS puzzle!</p>\n    <p>\n      The goal of this game is to practice CSS by dragging and resizing boxes to\n      match how they should appear, given some HTML and CSS.\n    </p>\n  </>\n);\n\nexport const SidebarComplete = () => (\n  <>\n    <h2>Congratulations!</h2>\n    <p>You've beaten every level that's currently in the game.</p>\n    <p>Check back for more content in the future!</p>\n  </>\n);\n","import { direction1 } from \"./direction/level-1\";\nimport { direction2 } from \"./direction/level-2\";\nimport { direction3 } from \"./direction/level-3\";\nimport { alignment1 } from \"./alignment/level-1\";\nimport { alignment2 } from \"./alignment/level-2\";\nimport { alignment3 } from \"./alignment/level-3\";\n\nexport const levels = [\n  direction1,\n  direction2,\n  direction3,\n  alignment1,\n  alignment2,\n  alignment3,\n];\n","export const direction1 = {\n  css: `\n.container {\n  display: flex;\n}`,\n  html: `\n<div class=\"container\">\n  <div class=\"box-1\"></div>\n  <div class=\"box-2\"></div>\n</div>`,\n  canvasWidth: 400,\n  canvasHeight: 400,\n  boxes: [\n    {\n      className: \"box-2\",\n      x: 0,\n      y: 0,\n      width: 200,\n      height: 200,\n      resizable: false,\n    },\n    {\n      className: \"box-1\",\n      x: 100,\n      y: 100,\n      width: 200,\n      height: 200,\n      resizable: false,\n    },\n  ],\n  goal: [\n    {\n      className: \"box-1\",\n      x: 0,\n      y: 0,\n      width: 200,\n      height: 200,\n    },\n    {\n      className: \"box-2\",\n      x: 200,\n      y: 0,\n      width: 200,\n      height: 200,\n    },\n  ],\n};\n","export const direction2 = {\n  css: `\n.container {\n  display: flex;\n  flex-direction: column;\n}`,\n  html: `\n<div class=\"container\">\n  <div class=\"box-1\"></div>\n  <div class=\"box-2\"></div>\n</div>`,\n  canvasWidth: 400,\n  canvasHeight: 400,\n  boxes: [\n    {\n      className: \"box-2\",\n      x: 0,\n      y: 0,\n      width: 200,\n      height: 200,\n      resizable: false,\n    },\n    {\n      className: \"box-1\",\n      x: 100,\n      y: 100,\n      width: 200,\n      height: 200,\n      resizable: false,\n    },\n  ],\n  goal: [\n    {\n      className: \"box-1\",\n      x: 0,\n      y: 0,\n      width: 200,\n      height: 200,\n    },\n    {\n      className: \"box-2\",\n      x: 0,\n      y: 200,\n      width: 200,\n      height: 200,\n    },\n  ],\n};\n","export const direction3 = {\n  css: `\n.container {\n  display: flex;\n  flex-direction: row-reverse;\n}`,\n  html: `\n<div class=\"container\">\n  <div class=\"box-1\"></div>\n  <div class=\"box-2\"></div>\n</div>`,\n  canvasWidth: 400,\n  canvasHeight: 400,\n  boxes: [\n    {\n      className: \"box-2\",\n      x: 0,\n      y: 0,\n      width: 200,\n      height: 200,\n      resizable: false,\n    },\n    {\n      className: \"box-1\",\n      x: 100,\n      y: 100,\n      width: 200,\n      height: 200,\n      resizable: false,\n    },\n  ],\n  goal: [\n    {\n      className: \"box-2\",\n      x: 0,\n      y: 0,\n      width: 200,\n      height: 200,\n    },\n    {\n      className: \"box-1\",\n      x: 200,\n      y: 0,\n      width: 200,\n      height: 200,\n    },\n  ],\n};\n","export const alignment1 = {\n  css: `\n.container {\n  display: flex;\n  align-items: center;\n}`,\n  html: `\n<div class=\"container\">\n  <div class=\"box-1\"></div>\n  <div class=\"box-2\"></div>\n</div>`,\n  canvasWidth: 400,\n  canvasHeight: 400,\n  boxes: [\n    {\n      className: \"box-2\",\n      x: 0,\n      y: 0,\n      width: 140,\n      height: 260,\n      resizable: false,\n    },\n    {\n      className: \"box-1\",\n      x: 100,\n      y: 100,\n      width: 200,\n      height: 200,\n      resizable: false,\n    },\n  ],\n  goal: [\n    {\n      className: \"box-1\",\n      x: 0,\n      y: 100,\n      width: 200,\n      height: 200,\n    },\n    {\n      className: \"box-2\",\n      x: 200,\n      y: 70,\n      width: 140,\n      height: 260,\n    },\n  ],\n};\n","export const alignment2 = {\n  css: `\n.container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}`,\n  html: `\n<div class=\"container\">\n  <div class=\"box-1\"></div>\n</div>`,\n  canvasWidth: 400,\n  canvasHeight: 400,\n  boxes: [\n    {\n      className: \"box-1\",\n      x: 0,\n      y: 0,\n      width: 200,\n      height: 200,\n      resizable: false,\n    },\n  ],\n  goal: [\n    {\n      className: \"box-1\",\n      x: 100,\n      y: 100,\n      width: 200,\n      height: 200,\n      resizable: false,\n    },\n  ],\n};\n","export const alignment3 = {\n  css: `\n.container {\n  display: flex;\n  align-items: stretch;\n}`,\n  html: `\n<div class=\"container\">\n  <div class=\"box-1\"></div>\n</div>`,\n  canvasWidth: 400,\n  canvasHeight: 400,\n  boxes: [\n    {\n      className: \"box-1\",\n      x: 0,\n      y: 0,\n      width: 200,\n      height: 200,\n      resizable: [\"y\"],\n    },\n    {\n      className: \"box-2\",\n      x: 100,\n      y: 100,\n      width: 200,\n      height: 200,\n      resizable: [\"y\"],\n    },\n  ],\n  goal: [\n    {\n      className: \"box-1\",\n      x: 0,\n      y: 0,\n      width: 200,\n      height: 400,\n    },\n    {\n      className: \"box-2\",\n      x: 200,\n      y: 0,\n      width: 200,\n      height: 400,\n    },\n  ],\n};\n","import { useState, useRef, useCallback } from \"react\";\nimport pick from \"lodash/pick\";\nimport isEqual from \"lodash/isEqual\";\nimport differenceWith from \"lodash/differenceWith\";\n\nconst KEYS_TO_KEEP = [\"className\", \"x\", \"y\", \"width\", \"height\"];\n\nconst transformScene = (scene) =>\n  JSON.parse(JSON.stringify(scene.map((box) => pick(box, KEYS_TO_KEEP))));\n\nexport const useSceneManager = (_scene, _goal) => {\n  const [isMatch, setMatch] = useState(false);\n  const scene = useRef(transformScene(_scene));\n  const initialScene = useRef(transformScene(_scene));\n  const referenceScene = useRef(transformScene(_goal));\n\n  const updateScene = useCallback(\n    (className, x, y, width, height) => {\n      // Set what we have stored to match what's given\n      const boxToUpdate = scene.current.find(\n        (box) => box.className === className\n      );\n      boxToUpdate.x = x;\n      boxToUpdate.y = y;\n      boxToUpdate.width = width;\n      boxToUpdate.height = height;\n\n      // Set if it's a win\n      setMatch(\n        differenceWith(scene.current, referenceScene.current, isEqual)\n          .length === 0\n      );\n    },\n    [scene, initialScene]\n  );\n\n  const setScene = useCallback(\n    (newScene, newGoalScene) => {\n      scene.current = transformScene(newScene);\n      initialScene.current = transformScene(newScene);\n      referenceScene.current = transformScene(newGoalScene);\n      setMatch(false);\n    },\n    [scene, initialScene]\n  );\n\n  return [isMatch, updateScene, setScene];\n};\n","import React, { useState, useCallback } from \"react\";\nimport \"./App.css\";\nimport \"react-resizable/css/styles.css\";\nimport { Puzzle } from \"./components/Puzzle/\";\nimport {\n  Sidebar,\n  SidebarContents,\n  SidebarIntroduction,\n  SidebarComplete,\n} from \"./components/Sidebar/\";\nimport { levels } from \"./data\";\nimport { useSceneManager } from \"./hooks/useSceneManager\";\n\nconst INITIAL_LEVEL = 1;\n\nconst App = () => {\n  // Whether or not to show the intro screen\n  const [introduction, setIntroduction] = useState(true);\n\n  // Whether or not to show the final screen\n  const [complete, setComplete] = useState(false);\n\n  const [sceneIndex, setSceneIndex] = useState(INITIAL_LEVEL - 1);\n  const [isMatch, updateScene, setScene] = useSceneManager(\n    levels[sceneIndex].boxes,\n    levels[sceneIndex].goal\n  );\n  const [rng, setRng] = useState(Math.random().toString(36).substring(7));\n\n  const handleLevelSubmit = useCallback(() => {\n    if (introduction) {\n      setIntroduction(false);\n      return;\n    }\n\n    // If it's a win, proceed\n    if (isMatch) {\n      if (sceneIndex + 1 === levels.length) {\n        setComplete(true);\n        return;\n      }\n      goTo((sceneIndex + 1) % levels.length);\n    }\n  }, [sceneIndex, isMatch]);\n\n  const goTo = (sceneIndex) => {\n    setSceneIndex(sceneIndex);\n    setScene(levels[sceneIndex].boxes, levels[sceneIndex].goal);\n  };\n\n  const handleReset = () => {\n    setScene(levels[sceneIndex].boxes, levels[sceneIndex].goal);\n    setRng(Math.random().toString(36).substring(7));\n  };\n\n  const getSubmitText = () => {\n    if (introduction) {\n      return \"Begin\";\n    }\n    if (complete) {\n      return null;\n    }\n    return \"Submit\";\n  };\n\n  return (\n    <main>\n      <Sidebar onSubmit={handleLevelSubmit} submitText={getSubmitText()}>\n        {introduction && <SidebarIntroduction />}\n        {!introduction && !complete && (\n          <SidebarContents level={levels[sceneIndex]} />\n        )}\n        {complete && <SidebarComplete />}\n      </Sidebar>\n      <Puzzle\n        rng={rng}\n        level={levels[sceneIndex]}\n        sceneIndex={sceneIndex}\n        onInput={updateScene}\n        onReset={handleReset}\n      />\n    </main>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}